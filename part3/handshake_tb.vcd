$date
	Tue Mar 15 16:53:46 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module handshake_tb $end
$var wire 1 ! req $end
$var reg 1 " ack $end
$var reg 1 # clk $end
$var reg 1 $ ready $end
$var reg 1 % reset $end
$scope module handshake_init $end
$var wire 1 " ack $end
$var wire 1 # clk $end
$var wire 1 $ ready $end
$var wire 1 % reset $end
$var wire 1 ! req $end
$var wire 2 & next_state [1:0] $end
$var reg 2 ' counter [1:0] $end
$var reg 2 ( state [1:0] $end
$scope function fsm_function $end
$var reg 1 ) ack $end
$var reg 2 * counter [1:0] $end
$var reg 2 + fsm_function [1:0] $end
$var reg 1 , ready $end
$var reg 2 - state [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
x,
b0 +
bx *
x)
bx (
bx '
b0 &
x%
x$
x#
x"
x!
$end
#1
0)
0,
0"
0$
1%
0#
#2
b0 *
b0 -
b0 '
0!
b0 (
1#
#3
0%
0#
#4
1#
#5
b1 &
b1 +
1,
1$
0#
#6
b1 -
b1 (
1#
#7
0#
#8
b1 *
b1 '
1#
#9
0#
#10
b10 *
b10 '
1#
#11
0#
#12
b10 &
b10 +
b11 *
b11 '
1#
#13
0#
#14
b0 *
b10 -
b0 '
1!
b10 (
1#
#15
0#
#16
1#
#17
b0 &
b0 +
1)
1"
0#
#18
b1 &
b1 +
b0 -
0!
b0 (
1#
#19
0#
#20
b1 -
b1 (
1#
